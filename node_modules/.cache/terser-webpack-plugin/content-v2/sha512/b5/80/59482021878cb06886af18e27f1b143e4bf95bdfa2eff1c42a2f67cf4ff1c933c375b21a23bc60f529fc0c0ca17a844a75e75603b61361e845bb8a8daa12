{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{361:function(t,a,r){\"use strict\";r.r(a);var i=r(42),s=Object(i.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[r(\"h1\",{attrs:{id:\"git基本命令\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git基本命令\"}},[t._v(\"#\")]),t._v(\" git基本命令\")]),t._v(\" \"),r(\"h2\",{attrs:{id:\"git管理项目的优点\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git管理项目的优点\"}},[t._v(\"#\")]),t._v(\" git管理项目的优点\")]),t._v(\" \"),r(\"blockquote\",[r(\"p\",[t._v(\"可以通过git status查看哪些文件没有被管理, 修改了哪些文件红色(没有被管理或者被修改了)、绿色(在暂缓区);\\n可以通过 git diff查看具体修改了哪些代码;\\n可以通过git log / git reflog查看项目演变历史;\\n可以通过git reset --hard 版本号  在任意版本之间切换;\\n无需备份多个文件, 每次commit提交Git会自动备份;\")])]),t._v(\" \"),r(\"h2\",{attrs:{id:\"git初始化\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git初始化\"}},[t._v(\"#\")]),t._v(\" git初始化\")]),t._v(\" \"),r(\"p\",[t._v(\"git init这个命令的作用是初始化项目。初始化后会有一个.git的隐藏文件夹。这个.git的作用域是当前文件夹。\")]),t._v(\" \"),r(\"h2\",{attrs:{id:\"初始化用户\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#初始化用户\"}},[t._v(\"#\")]),t._v(\" 初始化用户\")]),t._v(\" \"),r(\"p\",[t._v(\"初始化用户名和邮箱是为了便于多人git开发，我的git已经有了全局用户名和邮箱，可以进行修改\")]),t._v(\" \"),r(\"ol\",[r(\"li\",[r(\"p\",[t._v('修改全局用户名：$ git config --global user.name \"name\"')])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v('修改全局邮箱：$ git config --global user.email \"email\"')])])]),t._v(\" \"),r(\"h2\",{attrs:{id:\"添加文件夹\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#添加文件夹\"}},[t._v(\"#\")]),t._v(\" 添加文件夹\")]),t._v(\" \"),r(\"p\",[t._v('touch \"文件名称\"')]),t._v(\" \"),r(\"h2\",{attrs:{id:\"加入暂缓区\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#加入暂缓区\"}},[t._v(\"#\")]),t._v(\" 加入暂缓区\")]),t._v(\" \"),r(\"p\",[t._v(\"加入所有：git add .\")]),t._v(\" \"),r(\"h2\",{attrs:{id:\"提交master分支\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#提交master分支\"}},[t._v(\"#\")]),t._v(\" 提交master分支\")]),t._v(\" \"),r(\"p\",[t._v('git commit -m \"描述\"')]),t._v(\" \"),r(\"h2\",{attrs:{id:\"忽略提交\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#忽略提交\"}},[t._v(\"#\")]),t._v(\" 忽略提交\")]),t._v(\" \"),r(\"p\",[t._v(\"在当前文件夹加入一个.gitignore文件，用于放置不需要被git管理的文件\")]),t._v(\" \"),r(\"h2\",{attrs:{id:\"查看修改代码\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#查看修改代码\"}},[t._v(\"#\")]),t._v(\" 查看修改代码\")]),t._v(\" \"),r(\"p\",[t._v(\"通过 git diff查看具体修改了哪些代码\")]),t._v(\" \"),r(\"h2\",{attrs:{id:\"查看演变历史\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#查看演变历史\"}},[t._v(\"#\")]),t._v(\" 查看演变历史\")]),t._v(\" \"),r(\"p\",[t._v(\"git log是完成查看；git reflog简短查看\")]),t._v(\" \"),r(\"h2\",{attrs:{id:\"版本切换\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#版本切换\"}},[t._v(\"#\")]),t._v(\" 版本切换\")]),t._v(\" \"),r(\"p\",[t._v(\"通过git reset --hard 版本号  在任意版本之间切换\")]),t._v(\" \"),r(\"h2\",{attrs:{id:\"git分支命令\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git分支命令\"}},[t._v(\"#\")]),t._v(\" git分支命令\")]),t._v(\" \"),r(\"p\",[t._v(\"查看分支：git branch\")]),t._v(\" \"),r(\"p\",[t._v('创建分支：git branch \"分支名称\"')]),t._v(\" \"),r(\"p\",[t._v('切换分支：git checkout\"分支名称\"')]),t._v(\" \"),r(\"p\",[t._v(\"查看远程分支：git branch -r\")]),t._v(\" \"),r(\"p\",[t._v(\"提交到远程分支：git push --set-upstream origin\")]),t._v(\" \"),r(\"p\",[t._v('合并分支：git merge  \"分支名称\"(代表把\"其他分支\"合并到\"主分支\")')]),t._v(\" \"),r(\"p\",[t._v('删除分支：git branch -d \"分支名称\"')]),t._v(\" \"),r(\"h2\",{attrs:{id:\"git-log出现乱码\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git-log出现乱码\"}},[t._v(\"#\")]),t._v(\" git log出现乱码\")]),t._v(\" \"),r(\"p\",[t._v(\"bash中：export LESSCHARSET=utf-8\")]),t._v(\" \"),r(\"p\",[t._v(\"cmd中：set LESSCHARSET=utf-8\")])])}),[],!1,null,null,null);a.default=s.exports}}]);","extractedComments":[]}